        public override bool PreAI(NPC npc)
        {
            if (npc.type == NPCID.QueenBee)
            {
                Player target = Main.player[npc.target];
                if (Main.expertMode)
                {
                    int bonusDefense = (int)(20f * (1f - npc.life / npc.lifeMax));
                    npc.defense = npc.defDefense + bonusDefense;
                }
                if (npc.target < 0 || npc.target == 255 || Main.player[npc.target].dead || !Main.player[npc.target].active)
                {
                    npc.TargetClosest();
                }
                bool dead4 = Main.player[npc.target].dead;
                float Enrage = 0f;
                if ((double)(npc.position.Y / 16f) < Main.worldSurface)
                {
                    Enrage += 1f;
                }
                if (!Main.player[npc.target].ZoneJungle)
                {
                    Enrage += 1f;
                }
                if (Main.getGoodWorld)
                {
                    Enrage += 0.5f;
                }
                float DistanceToPlayer = Vector2.Distance(npc.Center, Main.player[npc.target].Center);
                if (npc.ai[0] != 5f)
                {
                    if (npc.timeLeft < 60)
                    {
                        npc.timeLeft = 60;
                    }
                    if (DistanceToPlayer > 3000f)
                    {
                        npc.ai[0] = 4f;
                        npc.netUpdate = true;
                    }
                }
                if (dead4)
                {
                    npc.ai[0] = 5f;
                    npc.netUpdate = true;
                }
                // for ai[0]:
                // 5 = despawn
                // 4 = 
                // 3 = 
                // 2 =
                // 1 = 
                // 0 =
                // DESPAWN
                if (npc.ai[0] == 5f)
                {
                    npc.velocity.Y *= 0.98f;
                    if (npc.velocity.X < 0f)
                    {
                        npc.direction = -1;
                    }
                    else
                    {
                        npc.direction = 1;
                    }
                    npc.spriteDirection = npc.direction;
                    if (npc.position.X < (float)(Main.maxTilesX * 8))
                    {
                        if (npc.velocity.X > 0f)
                        {
                            npc.velocity.X *= 0.98f;
                        }
                        else
                        {
                            npc.localAI[0] = 1f;
                        }
                        npc.velocity.X -= 0.08f;
                    }
                    else
                    {
                        if (npc.velocity.X < 0f)
                        {
                            npc.velocity.X *= 0.98f;
                        }
                        else
                        {
                            npc.localAI[0] = 1f;
                        }
                        npc.velocity.X += 0.08f;
                    }
                    npc.EncourageDespawn(10);
                }
                else if (npc.ai[0] == -1f)
                {
                    if (Main.netMode == 1)
                    {
                        return false;
                    }
                    float Ai1 = npc.ai[1];
                    int TwoOrThree;
                    do
                    {
                        TwoOrThree = Main.rand.Next(3);
                        switch (TwoOrThree)
                        {
                            case 1:
                                TwoOrThree = 2;
                                break;
                            case 2:
                                TwoOrThree = 3;
                                break;
                        }
                    }
                    while (TwoOrThree == Ai1);
                    npc.ai[0] = TwoOrThree;
                    npc.ai[1] = 0f;
                    npc.ai[2] = 0f;
                    npc.netUpdate = true;
                }
                else if (npc.ai[0] == 0f)
                {
                    int attackSpeed = 2;
                    if (Main.expertMode)
                    {
                        if (npc.life < npc.lifeMax / 2)
                        {
                            attackSpeed++;
                        }
                        if (npc.life < npc.lifeMax / 3)
                        {
                            attackSpeed++;
                        }
                        if (npc.life < npc.lifeMax / 5)
                        {
                            attackSpeed++;
                        }
                    }
                    attackSpeed += (int)(1f * Enrage);
                    if (npc.ai[1] > (2 * attackSpeed) && npc.ai[1] % 2f == 0f)
                    {
                        npc.ai[0] = -1f;
                        npc.ai[1] = 0f;
                        npc.ai[2] = 0f;
                        npc.netUpdate = true;
                        return false;
                    }
                    if (npc.ai[1] % 2f == 0f)
                    {
                        npc.TargetClosest();
                        float num621 = 20f;
                        num621 += 20f * Enrage;
                        if (Math.Abs(npc.Center.Y - target.Center.Y) < num621)
                        {
                            npc.localAI[0] = 1f;
                            npc.ai[1] += 1f;
                            npc.ai[2] = 0f;
                            npc.netUpdate = true;
                            float AttackSpeed = 12f;
                            if (Main.expertMode)
                            {
                                AttackSpeed = 16f;
                                if (npc.life < npc.lifeMax * 0.75)
                                {
                                    AttackSpeed += 2f;
                                }
                                if (npc.life < npc.lifeMax * 0.5)
                                {
                                    AttackSpeed += 2f;
                                }
                                if (npc.life < npc.lifeMax * 0.25)
                                {
                                    AttackSpeed += 2f;
                                }
                                if (npc.life < npc.lifeMax * 0.1)
                                {
                                    AttackSpeed += 2f;
                                }
                            }
                            AttackSpeed += 7f * Enrage;

                            Vector2 NPCPos = new Vector2(npc.position.X + npc.width * 0.5f, npc.position.Y + npc.height * 0.5f);
                            float VelocityX = target.position.X + target.width / 2 - NPCPos.X;
                            float VelocityY = target.position.Y + target.height / 2 - NPCPos.Y;
                            float Velocity = (float)Math.Sqrt(VelocityX * VelocityX + VelocityY * VelocityY);

                            Velocity = AttackSpeed / Velocity;

                            npc.velocity.X = VelocityX * Velocity;
                            npc.velocity.Y = VelocityY * Velocity;
                            npc.spriteDirection = npc.direction;
                            SoundEngine.PlaySound(SoundID.Roar, npc.position);
                            return false;
                        }
                        npc.localAI[0] = 0f;
                        float MaxSpeed = 12f;
                        float Acceleration = 0.15f;
                        if (Main.expertMode)
                        {
                            if (npc.life < npc.lifeMax * 0.75)
                            {
                                MaxSpeed += 1f;
                                Acceleration += 0.05f;
                            }
                            if (npc.life < npc.lifeMax * 0.5)
                            {
                                MaxSpeed += 1f;
                                Acceleration += 0.05f;
                            }
                            if (npc.life < npc.lifeMax * 0.25)
                            {
                                MaxSpeed += 2f;
                                Acceleration += 0.05f;
                            }
                            if (npc.life < npc.lifeMax * 0.1)
                            {
                                MaxSpeed += 2f;
                                Acceleration += 0.1f;
                            }
                        }
                        MaxSpeed += 3f * Enrage;
                        Acceleration += 0.5f * Enrage;
                        if (npc.position.Y + npc.height / 2 < Main.player[npc.target].position.Y + Main.player[npc.target].height / 2)
                        {
                            npc.velocity.Y += Acceleration;
                        }
                        else
                        {
                            npc.velocity.Y -= Acceleration;
                        }
                        if (npc.velocity.Y < 0f - MaxSpeed)
                        {
                            npc.velocity.Y = 0f - MaxSpeed;
                        }
                        if (npc.velocity.Y > MaxSpeed)
                        {
                            npc.velocity.Y = MaxSpeed;
                        }
                        if (Math.Abs(npc.position.X + npc.width / 2 - target.position.X + target.width / 2) > 600f)
                        {
                            npc.velocity.X += 0.15f * npc.direction;
                        }
                        else if (Math.Abs(npc.position.X + npc.width / 2 - target.position.X + target.width / 2) < 300f)
                        {
                            npc.velocity.X -= 0.15f * npc.direction;
                        }
                        else
                        {
                            npc.velocity.X *= 0.8f;
                        }
                        if (npc.velocity.X < -16f)
                        {
                            npc.velocity.X = -16f;
                        }
                        if (npc.velocity.X > 16f)
                        {
                            npc.velocity.X = 16f;
                        }
                        npc.spriteDirection = npc.direction;
                        return false;
                    }
                    if (npc.velocity.X < 0f)
                    {
                        npc.direction = -1;
                    }
                    else
                    {
                        npc.direction = 1;
                    }
                    npc.spriteDirection = npc.direction;
                    int duration = 600;
                    if (Main.expertMode)
                    {
                        if (npc.life < npc.lifeMax * 0.1)
                        {
                            duration = 300;
                        }
                        else if (npc.life < npc.lifeMax * 0.25)
                        {
                            duration = 450;
                        }
                        else if (npc.life < npc.lifeMax * 0.5)
                        {
                            duration = 500;
                        }
                        else if (npc.life < npc.lifeMax * 0.75)
                        {
                            duration = 550;
                        }
                    }
                    int num629 = 1;
                    if (npc.position.X + npc.width / 2 < target.position.X + target.width / 2)
                    {
                        num629 = -1;
                    }
                    duration -= (int)(100f * Enrage);
                    bool flag35 = false;
                    if (npc.direction == num629 && Math.Abs(npc.Center.X - target.Center.X) > duration)
                    {
                        npc.ai[2] = 1f;
                        flag35 = true;
                    }
                    if (Math.Abs(npc.Center.Y - target.Center.Y) > duration * 1.5f)
                    {
                        npc.ai[2] = 1f;
                        flag35 = true;
                    }
                    if (Enrage > 0f && flag35)
                    {
                        npc.velocity *= 0.5f;
                    }
                    if (npc.ai[2] == 1f)
                    {
                        npc.TargetClosest();
                        npc.spriteDirection = npc.direction;
                        npc.localAI[0] = 0f;
                        npc.velocity *= 0.9f;
                        float num630 = 0.1f;
                        if (Main.expertMode)
                        {
                            if (npc.life < npc.lifeMax / 2)
                            {
                                npc.velocity *= 0.9f;
                                num630 += 0.05f;
                            }
                            if (npc.life < npc.lifeMax / 3)
                            {
                                npc.velocity *= 0.9f;
                                num630 += 0.05f;
                            }
                            if (npc.life < npc.lifeMax / 5)
                            {
                                npc.velocity *= 0.9f;
                                num630 += 0.05f;
                            }
                        }
                        if (Enrage > 0f)
                        {
                            npc.velocity *= 0.7f;
                        }
                        if (Math.Abs(npc.velocity.X) + Math.Abs(npc.velocity.Y) < num630)
                        {
                            npc.ai[2] = 0f;
                            npc.ai[1] += 1f;
                            npc.netUpdate = true;
                        }
                    }
                    else
                    {
                        npc.localAI[0] = 1f;
                    }
                }
                else if (npc.ai[0] == 2f)
                {
                    npc.TargetClosest();
                    npc.spriteDirection = npc.direction;
                    float maxVelocity = 12f;
                    float Acceleration = 0.07f;
                    if (Main.expertMode)
                    {
                        Acceleration = 0.1f;
                    }
                    Vector2 vector77 = new Vector2(npc.position.X + npc.width * 0.5f, npc.position.Y + npc.height * 0.5f);
                    float XPosition = target.position.X + target.width / 2 - vector77.X;
                    float YPosition = target.position.Y + target.height / 2 - 200f - vector77.Y;
                    float Position = (float)Math.Sqrt(XPosition * XPosition + YPosition * YPosition);
                    if (Position < 200f)
                    {
                        npc.ai[0] = 1f;
                        npc.ai[1] = 0f;
                        npc.netUpdate = true;
                        return false;
                    }
                    Position = maxVelocity / Position;
                    if (npc.velocity.X < XPosition)
                    {
                        npc.velocity.X += Acceleration;
                        if (npc.velocity.X < 0f && XPosition > 0f)
                        {
                            npc.velocity.X += Acceleration;
                        }
                    }
                    else if (npc.velocity.X > XPosition)
                    {
                        npc.velocity.X -= Acceleration;
                        if (npc.velocity.X > 0f && XPosition < 0f)
                        {
                            npc.velocity.X -= Acceleration;
                        }
                    }
                    if (npc.velocity.Y < YPosition)
                    {
                        npc.velocity.Y += Acceleration;
                        if (npc.velocity.Y < 0f && YPosition > 0f)
                        {
                            npc.velocity.Y += Acceleration;
                        }
                    }
                    else if (npc.velocity.Y > YPosition)
                    {
                        npc.velocity.Y -= Acceleration;
                        if (npc.velocity.Y > 0f && YPosition < 0f)
                        {
                            npc.velocity.Y -= Acceleration;
                        }
                    }
                }
                else if (npc.ai[0] == 1f)
                {
                    npc.localAI[0] = 0f;
                    npc.TargetClosest();
                    Vector2 vector78 = new Vector2(npc.position.X + npc.width / 2 + Main.rand.Next(20) * npc.direction, npc.position.Y + npc.height * 0.8f);
                    Vector2 vector79 = new Vector2(npc.position.X + npc.width * 0.5f, npc.position.Y + npc.height * 0.5f);
                    float num636 = target.position.X + target.width / 2 - vector79.X;
                    float num637 = target.position.Y + target.height / 2 - vector79.Y;
                    float num638 = (float)Math.Sqrt(num636 * num636 + num637 * num637);
                    npc.ai[1] += 1f;
                    if (Main.expertMode)
                    {
                        int num639 = 0;
                        for (int num640 = 0; num640 < 255; num640++)
                        {
                            if (Main.player[num640].active && !Main.player[num640].dead && (npc.Center - Main.player[num640].Center).Length() < 1000f)
                            {
                                num639++;
                            }
                        }
                        npc.ai[1] += num639 / 2;
                        if (npc.life < npc.lifeMax * 0.75)
                        {
                            npc.ai[1] += 0.25f;
                        }
                        if (npc.life < npc.lifeMax * 0.5)
                        {
                            npc.ai[1] += 0.25f;
                        }
                        if (npc.life < npc.lifeMax * 0.25)

                        {
                            npc.ai[1] += 0.25f;
                        }
                        if (npc.life < npc.lifeMax * 0.1)
                        {
                            npc.ai[1] += 0.25f;
                        }

                        bool ItsAttacking = false;
                        int SummonBee = (int)(40f - 18f * Enrage);
                        if (npc.ai[1] > SummonBee)
                        {
                            npc.ai[1] = 0f;
                            npc.ai[2]++;
                            ItsAttacking = true;
                        }
                        if (Collision.CanHit(vector78, 1, 1, target.position, target.width, target.height) && ItsAttacking)
                        {

                            SoundEngine.PlaySound(SoundID.NPCHit1, npc.position);
                            if (Main.netMode != 1)
                            {
                                int bee = Main.rand.Next(210, 212);
                                int num643 = NPC.NewNPC(npc.GetSource_FromThis(), (int)vector78.X, (int)vector78.Y, bee);
                                Main.npc[num643].velocity = target.Center - npc.Center;
                                Main.npc[num643].velocity.Normalize();
                                NPC nPC = Main.npc[num643];
                                nPC.velocity *= 5f;
                                Main.npc[num643].localAI[0] = 60f;
                                Main.npc[num643].netUpdate = true;
                            }
                        }
                        if (num638 > 400f || !Collision.CanHit(new Vector2(vector78.X, vector78.Y - 30f), 1, 1, target.position, target.width, target.height))
                        {
                            float num644 = 14f;
                            float num645 = 0.1f;
                            vector79 = vector78;
                            num636 = target.Center.X - vector79.X;
                            num637 = target.Center.Y - vector79.Y;
                            num638 = (float)Math.Sqrt(num636 * num636 + num637 * num637);
                            num638 = num644 / num638;
                            if (npc.velocity.X < num636)
                            {
                                npc.velocity.X += num645;
                                if (npc.velocity.X < 0f && num636 > 0f)
                                {
                                    npc.velocity.X += num645;
                                }
                            }
                            else if (npc.velocity.X > num636)
                            {
                                npc.velocity.X -= num645;
                                if (npc.velocity.X > 0f && num636 < 0f)
                                {
                                    npc.velocity.X -= num645;
                                }
                            }
                            if (npc.velocity.Y < num637)
                            {
                                npc.velocity.Y += num645;
                                if (npc.velocity.Y < 0f && num637 > 0f)
                                {
                                    npc.velocity.Y += num645;
                                }
                            }
                            else if (npc.velocity.Y > num637)
                            {
                                npc.velocity.Y -= num645;
                                if (npc.velocity.Y > 0f && num637 < 0f)
                                {
                                    npc.velocity.Y -= num645;
                                }
                            }
                        }
                        else
                        {
                            npc.velocity *= 0.9f;
                        }
                        npc.spriteDirection = npc.direction;
                        if (npc.ai[2] > 5f)
                        {
                            npc.ai[0] = -1f;
                            npc.ai[1] = 1f;
                            npc.netUpdate = true;
                        }
                    }
                    else if (npc.ai[0] == 3f)
                    {
                        float num646 = 4f;
                        float Acceleration = 0.05f;
                        if (Main.expertMode)
                        {
                            Acceleration = 0.075f;
                            num646 = 6f;
                        }
                        Acceleration += 0.2f * Enrage;
                        num646 += 6f * Enrage;
                        Vector2 PositionX = new Vector2(npc.position.X + npc.width / 2 + Main.rand.Next(20) * npc.direction, npc.position.Y + npc.height * 0.8f);
                        Vector2 PositionY = new Vector2(npc.position.X + npc.width * 0.5f, npc.position.Y + npc.height * 0.5f);
                        float num648 = target.Center.X - PositionY.X;
                        float num649 = target.Center.Y - 300f - PositionY.Y;
                        float Distance = (float)Math.Sqrt(num648 * num648 + num649 * num649);
                        npc.ai[1] += 1f;
                        int FireRate = 40;
                        if (Main.expertMode)
                        {
                            FireRate = (npc.life < npc.lifeMax * 0.1) ? 15 : ((npc.life < npc.lifeMax / 3) ? 25 : ((npc.life >= npc.lifeMax / 2) ? 35 : 30));
                        }
                        FireRate -= (int)(5f * Enrage);
                        if (npc.ai[1] % FireRate == FireRate - 1 && npc.position.Y + npc.height < target.position.Y && Collision.CanHit(PositionX, 1, 1, target.position, target.width, target.height))
                        {
                            SoundEngine.PlaySound(SoundID.Item17, npc.position);
                            if (Main.netMode != 1)
                            {
                                float num652 = 8f;
                                if (Main.expertMode)
                                {
                                    num652 += 2f;
                                }
                                if (Main.expertMode && npc.life < npc.lifeMax * 0.1)
                                {
                                    num652 += 3f;
                                }
                                num652 += 7f * Enrage;
                                int velocityX = (int)(80f - 39f * Enrage);
                                int velocityY = (int)(40f - 19f * Enrage);
                                float VelocityX = target.Center.X - PositionX.X + Main.rand.Next(-velocityX, velocityX + 1);
                                float VelocityY = target.Center.Y - PositionX.Y + Main.rand.Next(-velocityY, velocityY + 1);
                                float num657 = (float)Math.Sqrt(VelocityX * VelocityX + VelocityY * VelocityY);
                                num657 = num652 / num657;
                                VelocityX *= num657;
                                VelocityY *= num657;
                                int Damage = 11;
                                int Type = 719;
                                int num660 = Projectile.NewProjectile(npc.GetSource_FromThis(), PositionX.X, PositionX.Y, VelocityX, VelocityY, Type, Damage, 0f, Main.myPlayer);
                                Main.projectile[num660].timeLeft = 300;
                            }
                        }
                        if (!Collision.CanHit(new Vector2(PositionX.X, PositionX.Y - 30f), 1, 1, target.position, target.width, target.height))
                        {
                            num646 = 14f;
                            Acceleration = 0.1f;
                            if (Enrage > 0f)
                            {
                                Acceleration = 0.5f;
                            }
                            PositionY = PositionX;
                            num648 = target.Center.X - PositionY.X;
                            num649 = target.Center.Y - PositionY.Y;
                            Distance = (float)Math.Sqrt(num648 * num648 + num649 * num649);
                            Distance = num646 / Distance;
                            if (npc.velocity.X < num648)
                            {
                                npc.velocity.X += Acceleration;
                                if (npc.velocity.X < 0f && num648 > 0f)
                                {
                                    npc.velocity.X += Acceleration;
                                }
                            }
                            else if (npc.velocity.X > num648)
                            {
                                npc.velocity.X -= Acceleration;
                                if (npc.velocity.X > 0f && num648 < 0f)
                                {
                                    npc.velocity.X -= Acceleration;
                                }
                            }
                            if (npc.velocity.Y < num649)
                            {
                                npc.velocity.Y += Acceleration;
                                if (npc.velocity.Y < 0f && num649 > 0f)
                                {
                                    npc.velocity.Y += Acceleration;
                                }
                            }
                            else if (npc.velocity.Y > num649)
                            {
                                npc.velocity.Y -= Acceleration;
                                if (npc.velocity.Y > 0f && num649 < 0f)
                                {
                                    npc.velocity.Y -= Acceleration;
                                }
                            }
                        }
                        else if (Distance > 100f)
                        {
                            npc.TargetClosest();
                            npc.spriteDirection = npc.direction;
                            Distance = num646 / Distance;
                            if (npc.velocity.X < num648)
                            {
                                npc.velocity.X += Acceleration;
                                if (npc.velocity.X < 0f && num648 > 0f)
                                {
                                    npc.velocity.X += Acceleration * 2f;
                                }
                            }
                            else if (npc.velocity.X > num648)
                            {
                                npc.velocity.X -= Acceleration;
                                if (npc.velocity.X > 0f && num648 < 0f)
                                {
                                    npc.velocity.X -= Acceleration * 2f;
                                }
                            }
                            if (npc.velocity.Y < num649)
                            {
                                npc.velocity.Y += Acceleration;
                                if (npc.velocity.Y < 0f && num649 > 0f)
                                {
                                    npc.velocity.Y += Acceleration * 2f;
                                }
                            }
                            else if (npc.velocity.Y > num649)
                            {
                                npc.velocity.Y -= Acceleration;
                                if (npc.velocity.Y > 0f && num649 < 0f)
                                {
                                    npc.velocity.Y -= Acceleration * 2f;
                                }
                            }
                        }
                        float num661 = 20f;
                        num661 -= 5f * Enrage;
                        if (npc.ai[1] > (float)FireRate * num661)
                        {
                            npc.ai[0] = -1f;
                            npc.ai[1] = 3f;
                            npc.netUpdate = true;
                        }
                    }
                    else if (npc.ai[0] == 4f)
                    {
                        npc.localAI[0] = 1f;
                        float num662 = 14f;
                        float num663 = 14f;
                        Vector2 vector82 = target.Center - npc.Center;
                        vector82.Normalize();
                        vector82 *= num662;
                        npc.velocity = (npc.velocity * num663 + vector82) / (num663 + 1f);
                        if (npc.velocity.X < 0f)
                        {
                            npc.direction = -1;
                        }
                        else
                        {
                            npc.direction = 1;
                        }
                        npc.spriteDirection = npc.direction;
                        if (DistanceToPlayer < 2000f)
                        {
                            npc.ai[0] = -1f;
                            npc.localAI[0] = 0f;
                        }
                    }
                }
                return false;
            }
            return true;
        }