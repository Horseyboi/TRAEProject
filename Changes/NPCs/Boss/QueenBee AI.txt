else if (aiStyle == 43)
	{
		if (Main.expertMode)
		{
			int num615 = (int)(20f * (1f - (float)life / (float)lifeMax));
			defense = defDefense + num615;
		}
		if (target < 0 || target == 255 || Main.player[target].dead || !Main.player[target].active)
		{
			TargetClosest();
		}
		bool dead4 = Main.player[target].dead;
		float num616 = 0f;
		if ((double)(position.Y / 16f) < Main.worldSurface)
		{
			num616 += 1f;
		}
		if (!Main.player[target].ZoneJungle)
		{
			num616 += 1f;
		}
		if (Main.getGoodWorld)
		{
			num616 += 0.5f;
		}
		float num617 = Vector2.Distance(base.Center, Main.player[target].Center);
		if (this.ai[0] != 5f)
		{
			if (timeLeft < 60)
			{
				timeLeft = 60;
			}
			if (num617 > 3000f)
			{
				this.ai[0] = 4f;
				netUpdate = true;
			}
		}
		if (dead4)
		{
			this.ai[0] = 5f;
			netUpdate = true;
		}
		if (this.ai[0] == 5f)
		{
			velocity.Y *= 0.98f;
			if (velocity.X < 0f)
			{
				direction = -1;
			}
			else
			{
				direction = 1;
			}
			spriteDirection = direction;
			if (position.X < (float)(Main.maxTilesX * 8))
			{
				if (velocity.X > 0f)
				{
					velocity.X *= 0.98f;
				}
				else
				{
					localAI[0] = 1f;
				}
				velocity.X -= 0.08f;
			}
			else
			{
				if (velocity.X < 0f)
				{
					velocity.X *= 0.98f;
				}
				else
				{
					localAI[0] = 1f;
				}
				velocity.X += 0.08f;
			}
			EncourageDespawn(10);
		}
		else if (this.ai[0] == -1f)
		{
			if (Main.netMode == 1)
			{
				return;
			}
			float num618 = this.ai[1];
			int num619;
			do
			{
				num619 = Main.rand.Next(3);
				switch (num619)
				{
				case 1:
					num619 = 2;
					break;
				case 2:
					num619 = 3;
					break;
				}
			}
			while ((float)num619 == num618);
			this.ai[0] = num619;
			this.ai[1] = 0f;
			this.ai[2] = 0f;
			netUpdate = true;
		}
		else if (this.ai[0] == 0f)
		{
			int num620 = 2;
			if (Main.expertMode)
			{
				if (life < lifeMax / 2)
				{
					num620++;
				}
				if (life < lifeMax / 3)
				{
					num620++;
				}
				if (life < lifeMax / 5)
				{
					num620++;
				}
			}
			num620 += (int)(1f * num616);
			if (this.ai[1] > (float)(2 * num620) && this.ai[1] % 2f == 0f)
			{
				this.ai[0] = -1f;
				this.ai[1] = 0f;
				this.ai[2] = 0f;
				netUpdate = true;
				return;
			}
			if (this.ai[1] % 2f == 0f)
			{
				TargetClosest();
				float num621 = 20f;
				num621 += 20f * num616;
				if (Math.Abs(base.Center.Y - Main.player[target].Center.Y) < num621)
				{
					localAI[0] = 1f;
					this.ai[1] += 1f;
					this.ai[2] = 0f;
					netUpdate = true;
					float num622 = 12f;
					if (Main.expertMode)
					{
						num622 = 16f;
						if ((double)life < (double)lifeMax * 0.75)
						{
							num622 += 2f;
						}
						if ((double)life < (double)lifeMax * 0.5)
						{
							num622 += 2f;
						}
						if ((double)life < (double)lifeMax * 0.25)
						{
							num622 += 2f;
						}
						if ((double)life < (double)lifeMax * 0.1)
						{
							num622 += 2f;
						}
					}
					num622 += 7f * num616;
					Vector2 vector76 = new Vector2(position.X + (float)width * 0.5f, position.Y + (float)height * 0.5f);
					float num623 = Main.player[target].position.X + (float)(Main.player[target].width / 2) - vector76.X;
					float num624 = Main.player[target].position.Y + (float)(Main.player[target].height / 2) - vector76.Y;
					float num625 = (float)Math.Sqrt(num623 * num623 + num624 * num624);
					num625 = num622 / num625;
					velocity.X = num623 * num625;
					velocity.Y = num624 * num625;
					spriteDirection = direction;
					SoundEngine.PlaySound(15, (int)position.X, (int)position.Y, 0);
					return;
				}
				localAI[0] = 0f;
				float num626 = 12f;
				float num627 = 0.15f;
				if (Main.expertMode)
				{
					if ((double)life < (double)lifeMax * 0.75)
					{
						num626 += 1f;
						num627 += 0.05f;
					}
					if ((double)life < (double)lifeMax * 0.5)
					{
						num626 += 1f;
						num627 += 0.05f;
					}
					if ((double)life < (double)lifeMax * 0.25)
					{
						num626 += 2f;
						num627 += 0.05f;
					}
					if ((double)life < (double)lifeMax * 0.1)
					{
						num626 += 2f;
						num627 += 0.1f;
					}
				}
				num626 += 3f * num616;
				num627 += 0.5f * num616;
				if (position.Y + (float)(height / 2) < Main.player[target].position.Y + (float)(Main.player[target].height / 2))
				{
					velocity.Y += num627;
				}
				else
				{
					velocity.Y -= num627;
				}
				if (velocity.Y < 0f - num626)
				{
					velocity.Y = 0f - num626;
				}
				if (velocity.Y > num626)
				{
					velocity.Y = num626;
				}
				if (Math.Abs(position.X + (float)(width / 2) - (Main.player[target].position.X + (float)(Main.player[target].width / 2))) > 600f)
				{
					velocity.X += 0.15f * (float)direction;
				}
				else if (Math.Abs(position.X + (float)(width / 2) - (Main.player[target].position.X + (float)(Main.player[target].width / 2))) < 300f)
				{
					velocity.X -= 0.15f * (float)direction;
				}
				else
				{
					velocity.X *= 0.8f;
				}
				if (velocity.X < -16f)
				{
					velocity.X = -16f;
				}
				if (velocity.X > 16f)
				{
					velocity.X = 16f;
				}
				spriteDirection = direction;
				return;
			}
			if (velocity.X < 0f)
			{
				direction = -1;
			}
			else
			{
				direction = 1;
			}
			spriteDirection = direction;
			int num628 = 600;
			if (Main.expertMode)
			{
				if ((double)life < (double)lifeMax * 0.1)
				{
					num628 = 300;
				}
				else if ((double)life < (double)lifeMax * 0.25)
				{
					num628 = 450;
				}
				else if ((double)life < (double)lifeMax * 0.5)
				{
					num628 = 500;
				}
				else if ((double)life < (double)lifeMax * 0.75)
				{
					num628 = 550;
				}
			}
			int num629 = 1;
			if (position.X + (float)(width / 2) < Main.player[target].position.X + (float)(Main.player[target].width / 2))
			{
				num629 = -1;
			}
			num628 -= (int)(100f * num616);
			bool flag35 = false;
			if (direction == num629 && Math.Abs(base.Center.X - Main.player[target].Center.X) > (float)num628)
			{
				this.ai[2] = 1f;
				flag35 = true;
			}
			if (Math.Abs(base.Center.Y - Main.player[target].Center.Y) > (float)num628 * 1.5f)
			{
				this.ai[2] = 1f;
				flag35 = true;
			}
			if (num616 > 0f && flag35)
			{
				velocity *= 0.5f;
			}
			if (this.ai[2] == 1f)
			{
				TargetClosest();
				spriteDirection = direction;
				localAI[0] = 0f;
				velocity *= 0.9f;
				float num630 = 0.1f;
				if (Main.expertMode)
				{
					if (life < lifeMax / 2)
					{
						velocity *= 0.9f;
						num630 += 0.05f;
					}
					if (life < lifeMax / 3)
					{
						velocity *= 0.9f;
						num630 += 0.05f;
					}
					if (life < lifeMax / 5)
					{
						velocity *= 0.9f;
						num630 += 0.05f;
					}
				}
				if (num616 > 0f)
				{
					velocity *= 0.7f;
				}
				if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) < num630)
				{
					this.ai[2] = 0f;
					this.ai[1] += 1f;
					netUpdate = true;
				}
			}
			else
			{
				localAI[0] = 1f;
			}
		}
		else if (this.ai[0] == 2f)
		{
			TargetClosest();
			spriteDirection = direction;
			float num631 = 12f;
			float num632 = 0.07f;
			if (Main.expertMode)
			{
				num632 = 0.1f;
			}
			Vector2 vector77 = new Vector2(position.X + (float)width * 0.5f, position.Y + (float)height * 0.5f);
			float num633 = Main.player[target].position.X + (float)(Main.player[target].width / 2) - vector77.X;
			float num634 = Main.player[target].position.Y + (float)(Main.player[target].height / 2) - 200f - vector77.Y;
			float num635 = (float)Math.Sqrt(num633 * num633 + num634 * num634);
			if (num635 < 200f)
			{
				this.ai[0] = 1f;
				this.ai[1] = 0f;
				netUpdate = true;
				return;
			}
			num635 = num631 / num635;
			if (velocity.X < num633)
			{
				velocity.X += num632;
				if (velocity.X < 0f && num633 > 0f)
				{
					velocity.X += num632;
				}
			}
			else if (velocity.X > num633)
			{
				velocity.X -= num632;
				if (velocity.X > 0f && num633 < 0f)
				{
					velocity.X -= num632;
				}
			}
			if (velocity.Y < num634)
			{
				velocity.Y += num632;
				if (velocity.Y < 0f && num634 > 0f)
				{
					velocity.Y += num632;
				}
			}
			else if (velocity.Y > num634)
			{
				velocity.Y -= num632;
				if (velocity.Y > 0f && num634 < 0f)
				{
					velocity.Y -= num632;
				}
			}
		}
		else if (this.ai[0] == 1f)
		{
			localAI[0] = 0f;
			TargetClosest();
			Vector2 vector78 = new Vector2(position.X + (float)(width / 2) + (float)(Main.rand.Next(20) * direction), position.Y + (float)height * 0.8f);
			Vector2 vector79 = new Vector2(position.X + (float)width * 0.5f, position.Y + (float)height * 0.5f);
			float num636 = Main.player[target].position.X + (float)(Main.player[target].width / 2) - vector79.X;
			float num637 = Main.player[target].position.Y + (float)(Main.player[target].height / 2) - vector79.Y;
			float num638 = (float)Math.Sqrt(num636 * num636 + num637 * num637);
			this.ai[1] += 1f;
			if (Main.expertMode)
			{
				int num639 = 0;
				for (int num640 = 0; num640 < 255; num640++)
				{
					if (Main.player[num640].active && !Main.player[num640].dead && (base.Center - Main.player[num640].Center).Length() < 1000f)
					{
						num639++;
					}
				}
				this.ai[1] += num639 / 2;
				if ((double)life < (double)lifeMax * 0.75)
				{
					this.ai[1] += 0.25f;
				}
				if ((double)life < (double)lifeMax * 0.5)
				{
					this.ai[1] += 0.25f;
				}
				if ((double)life < (double)lifeMax * 0.25)
				{
					this.ai[1] += 0.25f;
				}
				if ((double)life < (double)lifeMax * 0.1)
				{
					this.ai[1] += 0.25f;
				}
			}
			bool flag36 = false;
			int num641 = (int)(40f - 18f * num616);
			if (this.ai[1] > (float)num641)
			{
				this.ai[1] = 0f;
				this.ai[2]++;
				flag36 = true;
			}
			if (Collision.CanHit(vector78, 1, 1, Main.player[target].position, Main.player[target].width, Main.player[target].height) && flag36)
			{
				SoundEngine.PlaySound(3, (int)position.X, (int)position.Y);
				if (Main.netMode != 1)
				{
					int num642 = Main.rand.Next(210, 212);
					int num643 = NewNPC((int)vector78.X, (int)vector78.Y, num642);
					Main.npc[num643].velocity = Main.player[target].Center - base.Center;
					Main.npc[num643].velocity.Normalize();
					NPC nPC = Main.npc[num643];
					nPC.velocity *= 5f;
					Main.npc[num643].localAI[0] = 60f;
					Main.npc[num643].netUpdate = true;
				}
			}
			if (num638 > 400f || !Collision.CanHit(new Vector2(vector78.X, vector78.Y - 30f), 1, 1, Main.player[target].position, Main.player[target].width, Main.player[target].height))
			{
				float num644 = 14f;
				float num645 = 0.1f;
				vector79 = vector78;
				num636 = Main.player[target].position.X + (float)(Main.player[target].width / 2) - vector79.X;
				num637 = Main.player[target].position.Y + (float)(Main.player[target].height / 2) - vector79.Y;
				num638 = (float)Math.Sqrt(num636 * num636 + num637 * num637);
				num638 = num644 / num638;
				if (velocity.X < num636)
				{
					velocity.X += num645;
					if (velocity.X < 0f && num636 > 0f)
					{
						velocity.X += num645;
					}
				}
				else if (velocity.X > num636)
				{
					velocity.X -= num645;
					if (velocity.X > 0f && num636 < 0f)
					{
						velocity.X -= num645;
					}
				}
				if (velocity.Y < num637)
				{
					velocity.Y += num645;
					if (velocity.Y < 0f && num637 > 0f)
					{
						velocity.Y += num645;
					}
				}
				else if (velocity.Y > num637)
				{
					velocity.Y -= num645;
					if (velocity.Y > 0f && num637 < 0f)
					{
						velocity.Y -= num645;
					}
				}
			}
			else
			{
				velocity *= 0.9f;
			}
			spriteDirection = direction;
			if (this.ai[2] > 5f)
			{
				this.ai[0] = -1f;
				this.ai[1] = 1f;
				netUpdate = true;
			}
		}
		else if (this.ai[0] == 3f)
		{
			float num646 = 4f;
			float num647 = 0.05f;
			if (Main.expertMode)
			{
				num647 = 0.075f;
				num646 = 6f;
			}
			num647 += 0.2f * num616;
			num646 += 6f * num616;
			Vector2 vector80 = new Vector2(position.X + (float)(width / 2) + (float)(Main.rand.Next(20) * direction), position.Y + (float)height * 0.8f);
			Vector2 vector81 = new Vector2(position.X + (float)width * 0.5f, position.Y + (float)height * 0.5f);
			float num648 = Main.player[target].position.X + (float)(Main.player[target].width / 2) - vector81.X;
			float num649 = Main.player[target].position.Y + (float)(Main.player[target].height / 2) - 300f - vector81.Y;
			float num650 = (float)Math.Sqrt(num648 * num648 + num649 * num649);
			this.ai[1] += 1f;
			bool flag37 = false;
			int num651 = 40;
			if (Main.expertMode)
			{
				num651 = (((double)life < (double)lifeMax * 0.1) ? 15 : ((life < lifeMax / 3) ? 25 : ((life >= lifeMax / 2) ? 35 : 30)));
			}
			num651 -= (int)(5f * num616);
			if (this.ai[1] % (float)num651 == (float)(num651 - 1) && position.Y + (float)height < Main.player[target].position.Y && Collision.CanHit(vector80, 1, 1, Main.player[target].position, Main.player[target].width, Main.player[target].height))
			{
				SoundEngine.PlaySound(SoundID.Item17, position);
				if (Main.netMode != 1)
				{
					float num652 = 8f;
					if (Main.expertMode)
					{
						num652 += 2f;
					}
					if (Main.expertMode && (double)life < (double)lifeMax * 0.1)
					{
						num652 += 3f;
					}
					num652 += 7f * num616;
					int num653 = (int)(80f - 39f * num616);
					int num654 = (int)(40f - 19f * num616);
					float num655 = Main.player[target].position.X + (float)Main.player[target].width * 0.5f - vector80.X + (float)Main.rand.Next(-num653, num653 + 1);
					float num656 = Main.player[target].position.Y + (float)Main.player[target].height * 0.5f - vector80.Y + (float)Main.rand.Next(-num654, num654 + 1);
					float num657 = (float)Math.Sqrt(num655 * num655 + num656 * num656);
					num657 = num652 / num657;
					num655 *= num657;
					num656 *= num657;
					int num658 = 11;
					int num659 = 719;
					int num660 = Projectile.NewProjectile(GetProjectileSpawnSource(), vector80.X, vector80.Y, num655, num656, num659, num658, 0f, Main.myPlayer);
					Main.projectile[num660].timeLeft = 300;
				}
			}
			if (!Collision.CanHit(new Vector2(vector80.X, vector80.Y - 30f), 1, 1, Main.player[target].position, Main.player[target].width, Main.player[target].height))
			{
				num646 = 14f;
				num647 = 0.1f;
				if (num616 > 0f)
				{
					num647 = 0.5f;
				}
				vector81 = vector80;
				num648 = Main.player[target].position.X + (float)(Main.player[target].width / 2) - vector81.X;
				num649 = Main.player[target].position.Y + (float)(Main.player[target].height / 2) - vector81.Y;
				num650 = (float)Math.Sqrt(num648 * num648 + num649 * num649);
				num650 = num646 / num650;
				if (velocity.X < num648)
				{
					velocity.X += num647;
					if (velocity.X < 0f && num648 > 0f)
					{
						velocity.X += num647;
					}
				}
				else if (velocity.X > num648)
				{
					velocity.X -= num647;
					if (velocity.X > 0f && num648 < 0f)
					{
						velocity.X -= num647;
					}
				}
				if (velocity.Y < num649)
				{
					velocity.Y += num647;
					if (velocity.Y < 0f && num649 > 0f)
					{
						velocity.Y += num647;
					}
				}
				else if (velocity.Y > num649)
				{
					velocity.Y -= num647;
					if (velocity.Y > 0f && num649 < 0f)
					{
						velocity.Y -= num647;
					}
				}
			}
			else if (num650 > 100f)
			{
				TargetClosest();
				spriteDirection = direction;
				num650 = num646 / num650;
				if (velocity.X < num648)
				{
					velocity.X += num647;
					if (velocity.X < 0f && num648 > 0f)
					{
						velocity.X += num647 * 2f;
					}
				}
				else if (velocity.X > num648)
				{
					velocity.X -= num647;
					if (velocity.X > 0f && num648 < 0f)
					{
						velocity.X -= num647 * 2f;
					}
				}
				if (velocity.Y < num649)
				{
					velocity.Y += num647;
					if (velocity.Y < 0f && num649 > 0f)
					{
						velocity.Y += num647 * 2f;
					}
				}
				else if (velocity.Y > num649)
				{
					velocity.Y -= num647;
					if (velocity.Y > 0f && num649 < 0f)
					{
						velocity.Y -= num647 * 2f;
					}
				}
			}
			float num661 = 20f;
			num661 -= 5f * num616;
			if (this.ai[1] > (float)num651 * num661)
			{
				this.ai[0] = -1f;
				this.ai[1] = 3f;
				netUpdate = true;
			}
		}
		else if (this.ai[0] == 4f)
		{
			localAI[0] = 1f;
			float num662 = 14f;
			float num663 = 14f;
			Vector2 vector82 = Main.player[target].Center - base.Center;
			vector82.Normalize();
			vector82 *= num662;
			velocity = (velocity * num663 + vector82) / (num663 + 1f);
			if (velocity.X < 0f)
			{
				direction = -1;
			}
			else
			{
				direction = 1;
			}
			spriteDirection = direction;
			if (num617 < 2000f)
			{
				this.ai[0] = -1f;
				localAI[0] = 0f;
			}
		}
	}