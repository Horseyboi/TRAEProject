else if (aiStyle == 74)
		{
			TargetClosest(faceTarget: false);
			rotation = velocity.ToRotation();
			if (rotation < -MathF.PI / 2f)
			{
				rotation += MathF.PI;
			}
			if (rotation > MathF.PI / 2f)
			{
				rotation -= MathF.PI;
			}
			if (Math.Sign(velocity.X) != 0)
			{
				spriteDirection = -Math.Sign(velocity.X);
			}
			if (type == 418)
			{
				spriteDirection = Math.Sign(velocity.X);
			}
			float num1077 = 0.4f;
			float num1078 = 10f;
			float num1079 = 200f;
			float num1080 = 0f;
			float num1081 = 750f;
			float num1082 = 0f;
			float num1083 = 30f;
			float num1084 = 30f;
			float num1085 = 0.95f;
			int num1086 = 50;
			float num1087 = 14f;
			float num1088 = 30f;
			float num1089 = 100f;
			float num1090 = 20f;
			float num1091 = 0f;
			float num1092 = 7f;
			bool flag57 = true;
			if (type == 418)
			{
				num1077 = 0.3f;
				num1078 = 8f;
				num1079 = 175f;
				num1080 = 175f;
				num1081 = 600f;
				num1082 = 80f;
				num1083 = 60f;
				num1084 = 20f;
				num1085 = 0.75f;
				num1086 = 0;
				num1087 = 9f;
				num1088 = 30f;
				num1089 = 150f;
				num1090 = 60f;
				num1091 = 4f / 15f;
				num1092 = 7f;
				flag57 = false;
			}
			num1091 *= num1090;
			if (Main.expertMode)
			{
				num1077 *= Main.GameModeInfo.KnockbackToEnemiesMultiplier;
			}
			if (type == 388 && this.ai[0] != 3f)
			{
				position += netOffset;
				int num1093 = Dust.NewDust(position, width, height, 226, 0f, 0f, 100, default(Color), 0.5f);
				Main.dust[num1093].noGravity = true;
				Main.dust[num1093].velocity = velocity / 5f;
				Vector2 spinningpoint2 = new Vector2(-10f, 10f);
				if (spriteDirection == 1)
				{
					spinningpoint2.X *= -1f;
				}
				spinningpoint2 = spinningpoint2.RotatedBy(rotation);
				Main.dust[num1093].position = base.Center + spinningpoint2;
				position -= netOffset;
			}
			if (type == 418)
			{
				int num1094 = ((this.ai[0] != 2f) ? 1 : 2);
				int num1095 = ((this.ai[0] == 2f) ? 30 : 20);
				for (int num1096 = 0; num1096 < 2; num1096++)
				{
					if (Main.rand.Next(3) < num1094)
					{
						position += netOffset;
						int num1097 = Dust.NewDust(base.Center - new Vector2(num1095), num1095 * 2, num1095 * 2, 6, velocity.X * 0.5f, velocity.Y * 0.5f, 90, default(Color), 1.5f);
						Main.dust[num1097].noGravity = true;
						Dust dust = Main.dust[num1097];
						dust.velocity *= 0.2f;
						Main.dust[num1097].fadeIn = 1f;
						position -= netOffset;
					}
				}
			}
			if (this.ai[0] == 0f)
			{
				knockBackResist = num1077;
				float num1098 = num1078;
				Vector2 center6 = base.Center;
				Vector2 center7 = Main.player[target].Center;
				Vector2 vector140 = center7 - center6;
				Vector2 vector141 = vector140 - Vector2.UnitY * num1079;
				vector141 += Vector2.UnitX * ((vector140.X < 0f) ? num1080 : (0f - num1080));
				float num1099 = vector140.Length();
				vector140 = Vector2.Normalize(vector140) * num1098;
				vector141 = Vector2.Normalize(vector141) * num1098;
				bool flag58 = Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1);
				if (this.ai[3] >= 120f)
				{
					flag58 = true;
				}
				float num1100 = 8f;
				flag58 = flag58 && vector140.ToRotation() > MathF.PI / num1100 && vector140.ToRotation() < MathF.PI - MathF.PI / num1100;
				bool flag59 = num1099 < num1082;
				bool flag60 = num1099 > num1081;
				if (flag59 || flag60 || !flag58)
				{
					velocity.X = (velocity.X * (num1083 - 1f) + vector141.X) / num1083;
					velocity.Y = (velocity.Y * (num1083 - 1f) + vector141.Y) / num1083;
					if (!flag58)
					{
						if (!flag59 && !flag60)
						{
							this.ai[3]++;
						}
						if (this.ai[3] == 120f)
						{
							netUpdate = true;
						}
					}
					else
					{
						this.ai[3] = 0f;
					}
				}
				else
				{
					this.ai[0] = 1f;
					this.ai[2] = vector140.X;
					this.ai[3] = vector140.Y;
					netUpdate = true;
				}
			}
			else if (this.ai[0] == 1f)
			{
				knockBackResist = 0f;
				bool flag61 = true;
				if (type == 418)
				{
					flag61 = velocity.Length() > 2f;
					if (!flag61 && target >= 0 && !Main.player[target].DeadOrGhost)
					{
						Vector2 value = (Main.player[target].Center - base.Center).SafeNormalize(Vector2.Zero) * 0.1f;
						velocity = Vector2.Lerp(velocity, value, 0.25f);
					}
				}
				if (flag61)
				{
					velocity *= num1085;
				}
				this.ai[1]++;
				if (this.ai[1] >= num1084)
				{
					this.ai[0] = 2f;
					this.ai[1] = 0f;
					netUpdate = true;
					Vector2 vector142 = new Vector2(this.ai[2], this.ai[3]) + new Vector2(Main.rand.Next(-num1086, num1086 + 1), Main.rand.Next(-num1086, num1086 + 1)) * 0.04f;
					vector142.Normalize();
					vector142 *= num1087;
					velocity = vector142;
				}
				if (type == 388 && Main.rand.Next(4) == 0)
				{
					position += netOffset;
					int num1101 = Dust.NewDust(position, width, height, 226, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num1101].noGravity = true;
					Dust dust = Main.dust[num1101];
					dust.velocity *= 2f;
					Main.dust[num1101].velocity = Main.dust[num1101].velocity / 2f + Vector2.Normalize(Main.dust[num1101].position - base.Center);
					position -= netOffset;
				}
			}
			else if (this.ai[0] == 2f)
			{
				knockBackResist = 0f;
				float num1102 = num1088;
				this.ai[1]++;
				bool flag62 = Vector2.Distance(base.Center, Main.player[target].Center) > num1089 && base.Center.Y > Main.player[target].Center.Y;
				if ((this.ai[1] >= num1102 && flag62) || velocity.Length() < num1092)
				{
					this.ai[0] = 0f;
					this.ai[1] = 0f;
					this.ai[2] = 0f;
					this.ai[3] = 0f;
					velocity /= 2f;
					netUpdate = true;
					if (type == 418)
					{
						this.ai[1] = 45f;
						this.ai[0] = 4f;
					}
				}
				else
				{
					Vector2 center8 = base.Center;
					Vector2 center9 = Main.player[target].Center;
					Vector2 vector143 = center9 - center8;
					vector143.Normalize();
					if (vector143.HasNaNs())
					{
						vector143 = new Vector2(direction, 0f);
					}
					velocity = (velocity * (num1090 - 1f) + vector143 * (velocity.Length() + num1091)) / num1090;
				}
				if (flag57 && Collision.SolidCollision(position, width, height))
				{
					this.ai[0] = 3f;
					this.ai[1] = 0f;
					this.ai[2] = 0f;
					this.ai[3] = 0f;
					netUpdate = true;
				}
			}
			else if (this.ai[0] == 4f)
			{
				this.ai[1] -= 3f;
				if (this.ai[1] <= 0f)
				{
					this.ai[0] = 0f;
					this.ai[1] = 0f;
					netUpdate = true;
				}
				velocity *= 0.95f;
			}
			if (flag57 && this.ai[0] != 3f && Vector2.Distance(base.Center, Main.player[target].Center) < 64f)
			{
				this.ai[0] = 3f;
				this.ai[1] = 0f;
				this.ai[2] = 0f;
				this.ai[3] = 0f;
				netUpdate = true;
			}
			if (this.ai[0] != 3f)
			{
				return;
			}
			position = base.Center;
			width = (height = 192);
			position.X -= width / 2;
			position.Y -= height / 2;
			velocity = Vector2.Zero;
			damage = GetAttackDamage_ScaledByStrength(80f);
			alpha = 255;
			Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.2f, 0.7f, 1.1f);
			for (int num1103 = 0; num1103 < 10; num1103++)
			{
				int num1104 = Dust.NewDust(position, width, height, 31, 0f, 0f, 100, default(Color), 1.5f);
				Dust dust = Main.dust[num1104];
				dust.velocity *= 1.4f;
				Main.dust[num1104].position = ((float)Main.rand.NextDouble() * (MathF.PI * 2f)).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f) + base.Center;
			}
			for (int num1105 = 0; num1105 < 40; num1105++)
			{
				int num1106 = Dust.NewDust(position, width, height, 226, 0f, 0f, 100, default(Color), 0.5f);
				Main.dust[num1106].noGravity = true;
				Dust dust = Main.dust[num1106];
				dust.velocity *= 2f;
				Main.dust[num1106].position = ((float)Main.rand.NextDouble() * (MathF.PI * 2f)).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f) + base.Center;
				Main.dust[num1106].velocity = Main.dust[num1106].velocity / 2f + Vector2.Normalize(Main.dust[num1106].position - base.Center);
				if (Main.rand.Next(2) == 0)
				{
					num1106 = Dust.NewDust(position, width, height, 226, 0f, 0f, 100, default(Color), 0.9f);
					Main.dust[num1106].noGravity = true;
					dust = Main.dust[num1106];
					dust.velocity *= 1.2f;
					Main.dust[num1106].position = ((float)Main.rand.NextDouble() * (MathF.PI * 2f)).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f) + base.Center;
					Main.dust[num1106].velocity = Main.dust[num1106].velocity / 2f + Vector2.Normalize(Main.dust[num1106].position - base.Center);
				}
				if (Main.rand.Next(4) == 0)
				{
					num1106 = Dust.NewDust(position, width, height, 226, 0f, 0f, 100, default(Color), 0.7f);
					dust = Main.dust[num1106];
					dust.velocity *= 1.2f;
					Main.dust[num1106].position = ((float)Main.rand.NextDouble() * (MathF.PI * 2f)).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f) + base.Center;
					Main.dust[num1106].velocity = Main.dust[num1106].velocity / 2f + Vector2.Normalize(Main.dust[num1106].position - base.Center);
				}
			}
			this.ai[1]++;
			if (this.ai[1] >= 3f)
			{
				SoundEngine.
				(SoundID.Item14, position);
				life = 0;
				HitEffect();
				active = false;
			}
		}
