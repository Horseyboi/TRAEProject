if (this.ai[0] == 0f)
	{
		if (this.ai[1] == 0f)
		{
			TargetClosest(faceTarget: false);
		}
		localAI[2] = 10f;
		int num12 = Math.Sign(player.Center.X - center.X);
		if (num12 != 0)
		{
			direction = (spriteDirection = num12);
		}
		this.ai[1] += 1f;
		if (this.ai[1] >= 40f && flag2)
		{
			int num13 = 0;
			if (flag)
			{
				switch ((int)this.ai[3])
				{
				case 0:
					num13 = 0;
					break;
				case 1:
					num13 = 1;
					break;
				case 2:
					num13 = 0;
					break;
				case 3:
					num13 = 5;
					break;
				case 4:
					num13 = 0;
					break;
				case 5:
					num13 = 3;
					break;
				case 6:
					num13 = 0;
					break;
				case 7:
					num13 = 5;
					break;
				case 8:
					num13 = 0;
					break;
				case 9:
					num13 = 2;
					break;
				case 10:
					num13 = 0;
					break;
				case 11:
					num13 = 3;
					break;
				case 12:
					num13 = 0;
					break;
				case 13:
					num13 = 4;
					this.ai[3] = -1f;
					break;
				default:
					this.ai[3] = -1f;
					break;
				}
			}
			else
			{
				switch ((int)this.ai[3])
				{
				case 0:
					num13 = 0;
					break;
				case 1:
					num13 = 1;
					break;
				case 2:
					num13 = 0;
					break;
				case 3:
					num13 = 2;
					break;
				case 4:
					num13 = 0;
					break;
				case 5:
					num13 = 3;
					break;
				case 6:
					num13 = 0;
					break;
				case 7:
					num13 = 1;
					break;
				case 8:
					num13 = 0;
					break;
				case 9:
					num13 = 2;
					break;
				case 10:
					num13 = 0;
					break;
				case 11:
					num13 = 4;
					this.ai[3] = -1f;
					break;
				default:
					this.ai[3] = -1f;
					break;
				}
			}
			int maxValue = 6;
			if (life < lifeMax / 3)
			{
				maxValue = 4;
			}
			if (life < lifeMax / 4)
			{
				maxValue = 3;
			}
			if (expertMode && flag && Main.rand.Next(maxValue) == 0 && num13 != 0 && num13 != 4 && num13 != 5 && CountNPCS(523) < 10)
			{
				num13 = 6;
			}
			if (num13 == 0)
			{
				float num14 = (float)Math.Ceiling((player.Center + new Vector2(0f, -100f) - center).Length() / 50f);
				if (num14 == 0f)
				{
					num14 = 1f;
				}
				List<int> list2 = new List<int>();
				int num15 = 0;
				list2.Add(whoAmI);
				for (int k = 0; k < 200; k++)
				{
					if (Main.npc[k].active && Main.npc[k].type == 440 && Main.npc[k].ai[3] == (float)whoAmI)
					{
						list2.Add(k);
					}
				}
				bool flag5 = list2.Count % 2 == 0;
				foreach (int item2 in list2)
				{
					NPC nPC2 = Main.npc[item2];
					Vector2 center2 = nPC2.Center;
					float num16 = (float)((num15 + flag5.ToInt() + 1) / 2) * ((float)Math.PI * 2f) * 0.4f / (float)list2.Count;
					if (num15 % 2 == 1)
					{
						num16 *= -1f;
					}
					if (list2.Count == 1)
					{
						num16 = 0f;
					}
					Vector2 vector = new Vector2(0f, -1f).RotatedBy(num16) * new Vector2(300f, 200f);
					Vector2 vector2 = player.Center + vector - center2;
					nPC2.ai[0] = 1f;
					nPC2.ai[1] = num14 * 2f;
					nPC2.velocity = vector2 / num14;
					if (whoAmI >= nPC2.whoAmI)
					{
						nPC2.position -= nPC2.velocity;
					}
					nPC2.netUpdate = true;
					num15++;
				}
			}
			switch (num13)
			{
			case 1:
				this.ai[0] = 3f;
				this.ai[1] = 0f;
				break;
			case 2:
				this.ai[0] = 2f;
				this.ai[1] = 0f;
				break;
			case 3:
				this.ai[0] = 4f;
				this.ai[1] = 0f;
				break;
			case 4:
				this.ai[0] = 5f;
				this.ai[1] = 0f;
				break;
			}
			if (num13 == 5)
			{
				this.ai[0] = 7f;
				this.ai[1] = 0f;
			}
			if (num13 == 6)
			{
				this.ai[0] = 8f;
				this.ai[1] = 0f;
			}
			netUpdate = true;
		}
	}
	else if (this.ai[0] == 1f)
	{
		flag3 = true;
		localAI[2] = 10f;
		if ((float)(int)this.ai[1] % 2f != 0f && this.ai[1] != 1f)
		{
			position -= velocity;
		}
		this.ai[1] -= 1f;
		if (this.ai[1] <= 0f)
		{
			this.ai[0] = 0f;
			this.ai[1] = 0f;
			this.ai[3] += 1f;
			velocity = Vector2.Zero;
			netUpdate = true;
		}
	}